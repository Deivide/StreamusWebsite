@define-mixin button {
  font-size: 14px;
  font-weight: 500;
  text-transform: uppercase;
  border-radius: 2px;
  display: inline-block;
  min-width: 88px;
  line-height: 36px;
  user-select: none;
  text-align: center;

  &.isDisabled {
    cursor: default;
    pointer-events: none;
  }

  &:not(.isDisabled) {
    cursor: pointer;
  }
}

@mixin-from raisedButton $theme {
  @mixin button;
  padding: 0 16px;
  transition: box-shadow .1s cubic-bezier(.39, .575, .565, 1),
              background-color .1s cubic-bezier(.39, .575, .565, 1),
              color .1s cubic-bezier(.39, .575, .565, 1);

  @if $theme == dark {
    trait: darkBlue from 'background-color';
    trait: white from 'color';
  }

  @if $theme == light {
    trait: white from 'background-color';
    trait: darkPrimary from 'color';
  }

  &.isDisabled {
    @if $theme == dark {
      trait: disabledButton--dark from 'background-color';
      trait: disabledText--dark from 'color';
    }
    
    @if $theme == light {
      trait: disabledButton--light from 'background-color';
      trait: disabledText--light from 'color';
    }
  }

  &:not(.isDisabled) {
    box-shadow: 0 0 2px rgba(0, 0, 0, 0.14),
                0 2px 4px rgba(0, 0, 0, 0.28);

    &:hover {
      will-change: box-shadow, background-color;
    }

    &:active {
      box-shadow: 0 0 4px rgba(0, 0, 0, 0.14),
                  0 4px 4px rgba(0, 0, 0, 0.22);
      trait: darkBlue--shaded from 'background-color';
    }
  }
}

@mixin-from flatButton $theme {
  @mixin button;
  padding: 0 8px;
  transition: background-color .1s cubic-bezier(.39, .575, .565, 1),
              color .1s cubic-bezier(.39, .575, .565, 1);
  will-change: background-color, color;

  @if $theme == dark {
    trait: white from 'color';
  }

  @if $theme == light {
    trait: blue from 'color';
  }

  &.isDisabled {
    @if $theme == dark {
      trait: disabledText--dark from 'color';
    }
    
    @if $theme == light {
      trait: disabledText--light from 'color';
    }
  }

  &:not(.isDisabled) {
    &:hover {
      trait: gray--hoverButton from 'background-color';
    }

    &:active {
      trait: gray--activeButton from 'background-color';
    }
  }
}